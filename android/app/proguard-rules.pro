# Flutter-specific ProGuard rules

# Keep the Flutter MainActivity class
-keep class io.flutter.app.** { *; }

# Keep the Flutter plugin registrant class, generated by Flutter
-keep class io.flutter.plugins.** { *; }

# Keep Dart methods that are being invoked by the JNI
-keep class io.flutter.embedding.** { *; }
-keep class io.flutter.plugin.** { *; }

# Keep any classes that have native methods to avoid stripping
-keepclasseswithmembernames class * {
    native <methods>;
}

# Keep all classes in the Telpo SDK (if relevant)
-keep class com.telpo.** { *; }

# Keep all classes related to org.chickenhook.restrictionbypass (based on your error log)
-keep class org.chickenhook.restrictionbypass.** { *; }

# Prevent obfuscation of the Java reflection code, which might be used by the SDK or libraries
-keepclassmembers class * {
    ** metaClass;
    *;
}

# Generic ProGuard rules to avoid issues with obfuscating serialization-related classes
-keepattributes Signature
-keepattributes *Annotation*
-keepattributes Exceptions

# Keep Gson library classes (if using)
-keep class com.google.gson.** { *; }
-keep class com.google.gson.internal.bind.** { *; }

# Optional: keep everything in your app (might not be needed, use only for debugging purposes)
# -keep class com.example.tapintapout.** { *; }

# Ensure logging isn't removed in release mode
-assumenosideeffects class android.util.Log {
    public static int v(...);
    public static int d(...);
    public static int i(...);
    public static int w(...);
    public static int e(...);
}

# General rule to avoid obfuscating anything related to native code
-keep class * {
    native <methods>;
}

# Optional: Disable shrinking for debugging purposes
# -dontshrink
